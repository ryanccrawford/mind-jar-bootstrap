{"version":3,"sources":["components/ScoreBar/index.js","components/NavBar/index.js","components/Container/index.js","components/Row/index.js","components/Card/index.js","components/Board/index.js","pages/Main.js","App.js","index.js"],"names":["ScoreBar","react_default","a","createElement","className","concat","this","props","score","wins","loses","highScore","Component","NavBar","type","bg","dark","href","src","height","alt","name","components_ScoreBar","React","Container","Object","assign","fluid","Row","Card","myLoader","react_loader_spinner_default","color","width","components_Container","components_Row","cards","map","c","i","key","visibility_sensor_default","umd_default","loader","onClick","handleImgClick","data-id","Board","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","shuffleImages","setState","array","images","length","j","Math","floor","random","_ref","event","id","target","getAttribute","addClickedImg","checkIfAlreadyClicked","currentPicked","cardsClick","find","value","index","shuffleNow","imageNum","incrementLoses","setScoreZero","toConsumableArray","incrementScore","incrementWins","components_Card","Main","components_Board","ReactModal","setAppElement","App","modalIsOpen","title","subtitle","message","ns","setHighScore","setTitle","setSubTitle","setMessage","openModal","subTitle","bind","assertThisInitialized","afterOpenModal","closeModal","style","_this2","components_NavBar","pages_Main","lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","content","backgroundColor","top","left","right","bottom","marginRight","transform","boxShadow","ref","class","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.77829932.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass ScoreBar extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"badge-pill badge badge-secondary ml-1 large\">Current Score: {`${this.props.score}`}</span>\r\n                <span className=\"badge-pill badge badge-secondary ml-1 large\">Wins: {`${this.props.wins}`}</span>\r\n                <span className=\"badge-pill badge badge-secondary ml-1 large\">Losses: {`${this.props.loses}`}</span>\r\n                <span className=\"badge-pill badge badge-secondary ml-1 large\">High Score: {`${this.props.highScore}`}</span>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScoreBar;\r\n","import React from 'react';\r\n//import { Link } from \"react-router-dom\";\r\nimport ScoreBar from \"../ScoreBar\"\r\nimport \"./style.css\";\r\n\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        let type = \"\"\r\n        let bg = \"\"\r\n        if (this.props.dark) {\r\n            type = \"navbar-light\"\r\n            bg = \"bg-light\"\r\n        } else {\r\n            type = \"navbar-light\"\r\n            bg = \"bg-light\"\r\n        }\r\n        return (\r\n           <nav className={`navbar ${type} ${bg} shadow-sm`}>\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                    <img src=\"./assets/images/glass-jar.png\" height=\"64\" alt=\"...\" />\r\n                    <span className=\"flicker brain\">{this.props.name}</span>\r\n                </a>\r\n                <span className=\"small-text\">Makes your mind hurt</span>\r\n            <ScoreBar\r\n                score={this.props.score}\r\n                wins={this.props.wins}\r\n                loses={this.props.loses}\r\n                highScore={this.props.highScore}\r\n\r\n            ></ScoreBar>\r\n        </ nav>\r\n    )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nfunction Container(props) {\r\n    return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nfunction Row(props) {\r\n    return <div className={\"row\"} {...props} />;\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport Row from \"../Row\";\r\nimport Container from \"../Container\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Img from 'react-image'\r\nimport VisibilitySensor from 'react-visibility-sensor'\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n    const myLoader = () => {\r\n       return ( <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height=\"100\"\r\n            width=\"100\">\r\n        </Loader>\r\n      )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {props.cards.map((c, i) => (\r\n                    (\r\n                        <div className=\"col-4 mt-2 mb-1 colg\"\r\n                            key={c}\r\n                        >\r\n                            <VisibilitySensor>\r\n                            <Img\r\n                                src={`./assets/images/illusions/${c}.gif`}\r\n                                    loader={myLoader}\r\n                                className=\"button shadow bg-white rounded game-tile\"\r\n                                onClick={props.handleImgClick}\r\n                                data-id={c}\r\n                                />\r\n                            </VisibilitySensor>\r\n                            \r\n                     </div>\r\n                )\r\n            )\r\n            )\r\n            }    \r\n            </ Row>\r\n        </Container>\r\n      )\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Card from \"../Card\";\r\nimport \"./style.css\";\r\n\r\nclass Board extends Component {\r\n    \r\n    state = {\r\n\r\n\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.images = [\"16\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"] ;\r\n        this.state.cardsClick = [];\r\n        this.state.cards = [];\r\n        if (props.shuffleNow) {\r\n            this.shuffleImages()\r\n        }\r\n        \r\n    }\r\n    \r\n   \r\n    componentDidMount() {\r\n        this.shuffleImages()\r\n    }\r\n\r\n    shuffleImages = () => {\r\n        this.setState({ cards: [] })\r\n        let array = this.state.images\r\n       for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        this.setState({ cards: array })\r\n        \r\n    }\r\n\r\n    handleImgClick = event => { \r\n        let id = event.target.getAttribute(\"data-id\")\r\n        if (id) {\r\n            this.addClickedImg(id) \r\n        }\r\n     \r\n    };\r\n    addClickedImg(imageNum) {\r\n        if (this.checkIfAlreadyClicked(imageNum)) {\r\n            this.props.incrementLoses()\r\n            this.props.setScoreZero()\r\n            this.setState({ cardsClick: [] })     \r\n        } else {\r\n            this.setState({ cardsClick: [...this.state.cardsClick, imageNum] })\r\n                this.props.incrementScore()\r\n            if ((this.state.cardsClick.length + 1)=== this.state.images.length) {\r\n                this.props.incrementWins()    \r\n            }\r\n            \r\n        }\r\n        this.shuffleImages()\r\n    }\r\n    checkIfAlreadyClicked = (id) => {\r\n        let currentPicked = this.state.cardsClick\r\n        if (typeof (currentPicked) === 'undefined' || currentPicked.length < 1) {\r\n            return false\r\n        } else {\r\n            let match = currentPicked.find((value, index) => (id === value ? true : false))\r\n            if (typeof (match) === 'undefined') {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <Card cards={this.state.cards} handleImgClick={this.handleImgClick}>\r\n            </Card >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Container from \"../components/Container\";\r\nimport Board from \"../components/Board\";\r\n\r\nfunction Main(props){\r\n        return (\r\n            <Container className=\"mt-4\">\r\n                <Board\r\n                    score={props.score}\r\n                    wins={props.wins}\r\n                    loses={props.loses}\r\n                    highScore={props.highScore}\r\n                    incrementScore={props.incrementScore}\r\n                    incrementWins={props.incrementWins}\r\n                    incrementLoses={props.incrementLoses}\r\n                    setScoreZero={props.setScoreZero}\r\n                    shuffleNow={props.shuffleNow}\r\n                />\r\n            </Container>\r\n        )\r\n    \r\n}\r\n\r\nexport default Main","import React, { Component } from 'react';\r\nimport NavBar from \"./components/NavBar\"\r\nimport Main from \"./pages/Main\";\r\nimport ReactModal from 'react-modal';\r\n\r\n\r\nReactModal.setAppElement('#root')\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    state = {\r\n        score: 0,\r\n        highScore: 0,\r\n        wins: 0,\r\n        loses: 0,\r\n        modalIsOpen: false,\r\n        title: \"\",\r\n        subtitle: \"\",\r\n        message: \"\",\r\n        shuffleNow: false\r\n    };\r\n\r\n    incrementScore = () => {\r\n        const ns = this.state.score + 1\r\n        this.setState({ score: ns })\r\n        this.setHighScore(ns)\r\n    }\r\n\r\n    incrementWins = () => {\r\n        this.setState({ wins: this.state.wins + 1 })\r\n        this.setTitle(\"You Won!\")\r\n        this.setSubTitle(\"Way to go!\")\r\n        this.setMessage(\"Great Job. You are doing great!\")\r\n        this.openModal()\r\n        this.setState({ shuffleNow: true })\r\n    }\r\n\r\n    incrementLoses = () => {\r\n        this.setState({ loses: this.state.loses + 1 })\r\n        this.setTitle(\"Oh No!\")\r\n        this.setSubTitle(\"Try to focus\")\r\n        this.setMessage(\"Looks like you picked that one all ready!\")\r\n        this.openModal()\r\n    }\r\n\r\n    setHighScore = (score) => {\r\n        if (this.state.highScore < score) {\r\n            this.setState({ highScore: score})\r\n        }\r\n\r\n    }\r\n\r\n    setScoreZero = () => {\r\n        this.setState({ score: 0 })\r\n    }\r\n    \r\n    openModal() {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n\r\n    setTitle = (title) => {\r\n        this.setState({title: title})\r\n    }\r\n\r\n    setSubTitle = (subTitle) => {\r\n        this.setState({subtitle: subTitle})\r\n    }\r\n\r\n    setMessage = (message) => {\r\n        this.setState({message: message})\r\n    }\r\n\r\n    afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        this.subtitle.style.color = '#f00';\r\n     \r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <NavBar\r\n                    dark={true}\r\n                    name=\"Mind Jar\"\r\n                    score={this.state.score}\r\n                    wins={this.state.wins}\r\n                    loses={this.state.loses}\r\n                    highScore={this.state.highScore}\r\n                />\r\n              \r\n               <Main\r\n                    score={this.state.score}\r\n                    wins={this.state.wins}\r\n                    loses={this.state.loses}\r\n                    highScore={this.state.highScore}\r\n                    incrementScore={this.incrementScore}\r\n                    incrementWins={this.incrementWins}\r\n                    incrementLoses={this.incrementLoses}\r\n                    setScoreZero={this.setScoreZero}\r\n                    shuffleNow={this.state.shuffleNow}\r\n               \r\n\r\n                   \r\n                />\r\n                <ReactModal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    contentLabel={this.state.title}\r\n                    style={{\r\n                        content: {\r\n                            backgroundColor: 'rgb(5,5,5)',\r\n                            top: '50%',\r\n                            left: '50%',\r\n                            right: 'auto',\r\n                            bottom: 'auto',\r\n                            marginRight: '-50%',\r\n                            transform: 'translate(-50%, -50%)',\r\n                            boxShadow: '1px 1px 20px black'\r\n                        }\r\n                    }}\r\n             \r\n                            >\r\n             \r\n                    <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.subtitle}</h2>\r\n       \r\n                    <div>\r\n                        <p>{this.state.message}</p>\r\n                        <button onClick={this.closeModal}>OK</button>\r\n                    </div>\r\n\r\n                </ReactModal>\r\n\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <a class=\"text\" href=\"/\">Mind Jar</a>\r\n                </nav>\r\n                \r\n            </ div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}