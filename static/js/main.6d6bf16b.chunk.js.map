{"version":3,"sources":["components/ScoreBar/index.js","components/NavBar/index.js","components/Container/index.js","components/Row/index.js","components/Card/index.js","components/Board/index.js","pages/Main.js","App.js","index.js"],"names":["ScoreBar","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","concat","score","wins","loses","highScore","Component","NavBar","type","bg","dark","href","src","height","alt","name","components_ScoreBar","React","Container","assign","fluid","Row","Card","components_Container","components_Row","cards","map","c","i","key","onClick","handleImgClick","data-id","Board","_this","state","shuffleImages","setState","array","images","length","j","Math","floor","random","_ref","event","id","target","getAttribute","addClickedImg","checkIfAlreadyClicked","currentPicked","cardsClick","find","value","index","shuffleNow","imageNum","incrementLoses","setScoreZero","toConsumableArray","incrementScore","incrementWins","components_Card","Main","components_Board","ReactModal","setAppElement","App","modalIsOpen","title","subtitle","message","setHighScore","setTitle","setSubTitle","setMessage","openModal","subTitle","bind","assertThisInitialized","afterOpenModal","closeModal","style","color","_this2","components_NavBar","pages_Main","lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","content","backgroundColor","top","left","right","bottom","marginRight","transform","boxShadow","ref","class","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d6bf16b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nclass ScoreBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"badge-pill badge badge-secondary ml-1\">Current Score: {`${this.props.score}`}</span>\r\n                <span className=\"badge-pill badge badge-secondary ml-1\">Wins: {`${this.props.wins}`}</span>\r\n                <span className=\"badge-pill badge badge-secondary ml-1\">Losses: {`${this.props.loses}`}</span>\r\n                <span className=\"badge-pill badge badge-secondary ml-1\">High Score: {`${this.props.highScore}`}</span>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScoreBar;\r\n","import React from 'react';\r\n//import { Link } from \"react-router-dom\";\r\nimport ScoreBar from \"../ScoreBar\"\r\nimport \"./style.css\";\r\n\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        let type = \"\"\r\n        let bg = \"\"\r\n        if (this.props.dark) {\r\n            type = \"navbar-light\"\r\n            bg = \"bg-light\"\r\n        } else {\r\n            type = \"navbar-light\"\r\n            bg = \"bg-light\"\r\n        }\r\n        return (\r\n           <nav className={`navbar ${type} ${bg} shadow-sm`}>\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <img src=\"./assets/images/glass-jar.png\" height=\"64\" alt=\"...\" />{this.props.name}\r\n            </a>\r\n            <ScoreBar\r\n                score={this.props.score}\r\n                wins={this.props.wins}\r\n                loses={this.props.loses}\r\n                highScore={this.props.highScore}\r\n\r\n            ></ScoreBar>\r\n        </ nav>\r\n    )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nfunction Container(props) {\r\n    return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nfunction Row(props) {\r\n    return <div className={\"row\"} {...props} />;\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport Row from \"../Row\";\r\nimport Container from \"../Container\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {props.cards.map((c, i) => (\r\n                    (\r\n                        <div className=\"col-4 mt-2 mb-1 colg\"\r\n                            key={c}\r\n                        >\r\n                            <img\r\n\r\n                            src={`./assets/images/illusions/${c}.gif`}\r\n                            alt=\"...\"\r\n                            className=\"button shadow bg-white rounded game-tile\" \r\n                           \r\n                            onClick={props.handleImgClick}\r\n                            data-id={c}\r\n                            />\r\n                     </div>\r\n                )\r\n            )\r\n            )\r\n            }    \r\n            </ Row>\r\n        </Container>\r\n      )\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Card from \"../Card\";\r\nimport \"./style.css\";\r\n\r\nclass Board extends Component {\r\n    \r\n    state = {\r\n\r\n\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.images = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"] ;\r\n        this.state.cardsClick = [];\r\n        this.state.cards = [];\r\n        if (props.shuffleNow) {\r\n            this.shuffleImages()\r\n        }\r\n        \r\n    }\r\n    \r\n   \r\n    componentDidMount() {\r\n        this.shuffleImages()\r\n    }\r\n\r\n    shuffleImages = () => {\r\n        this.setState({ cards: [] })\r\n        let array = this.state.images\r\n       for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        this.setState({ cards: array })\r\n        \r\n    }\r\n\r\n    handleImgClick = event => { \r\n        let id = event.target.getAttribute(\"data-id\")\r\n        if (id) {\r\n            this.addClickedImg(id) \r\n        }\r\n     \r\n    };\r\n    addClickedImg(imageNum) {\r\n        if (this.checkIfAlreadyClicked(imageNum)) {\r\n            this.props.incrementLoses()\r\n            this.props.setScoreZero()\r\n            this.setState({ cardsClick: [] })     \r\n        } else {\r\n            this.setState({ cardsClick: [...this.state.cardsClick, imageNum] })\r\n                this.props.incrementScore()\r\n            if (this.state.cardsClick.length === this.state.images.length) {\r\n                this.props.incrementWins()    \r\n            }\r\n            \r\n        }\r\n        this.shuffleImages()\r\n    }\r\n    checkIfAlreadyClicked = (id) => {\r\n        let currentPicked = this.state.cardsClick\r\n        if (typeof (currentPicked) === 'undefined' || currentPicked.length < 1) {\r\n            return false\r\n        } else {\r\n            let match = currentPicked.find((value, index) => (id === value ? true : false))\r\n            if (typeof (match) === 'undefined') {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <Card cards={this.state.cards} handleImgClick={this.handleImgClick}>\r\n            </Card >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Container from \"../components/Container\";\r\nimport Board from \"../components/Board\";\r\n\r\nfunction Main(props){\r\n        return (\r\n            <Container className=\"mt-4\">\r\n                <Board\r\n                    score={props.score}\r\n                    wins={props.wins}\r\n                    loses={props.loses}\r\n                    highScore={props.highScore}\r\n                    incrementScore={props.incrementScore}\r\n                    incrementWins={props.incrementWins}\r\n                    incrementLoses={props.incrementLoses}\r\n                    setScoreZero={props.setScoreZero}\r\n                    shuffleNow={props.shuffleNow}\r\n                />\r\n            </Container>\r\n        )\r\n    \r\n}\r\n\r\nexport default Main","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport NavBar from \"./components/NavBar\"\r\nimport Main from \"./pages/Main\";\r\nimport ReactModal from 'react-modal';\r\n\r\n\r\nReactModal.setAppElement('#root')\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    state = {\r\n        score: 0,\r\n        highScore: 0,\r\n        wins: 0,\r\n        loses: 0,\r\n        modalIsOpen: false,\r\n        title: \"\",\r\n        subtitle: \"\",\r\n        message: \"\",\r\n        shuffleNow: false\r\n    };\r\n\r\n    incrementScore = () => {\r\n        this.setState({ score: this.state.score + 1 })\r\n        this.setHighScore()\r\n    }\r\n\r\n    incrementWins = () => {\r\n        this.setState({ wins: this.state.wins + 1 })\r\n        this.setTitle(\"You Won!\")\r\n        this.setSubTitle(\"Way to go!\")\r\n        this.setMessage(\"Great Job. You are doing great!\")\r\n        this.openModal()\r\n        this.setState({ shuffleNow: true })\r\n    }\r\n\r\n    incrementLoses = () => {\r\n        this.setState({ loses: this.state.loses + 1 })\r\n        this.setTitle(\"Oh No!\")\r\n        this.setSubTitle(\"Try to focus\")\r\n        this.setMessage(\"Looks like you picked that one all ready!\")\r\n        this.openModal()\r\n    }\r\n\r\n    setHighScore = () => {\r\n        if (this.state.highScore < this.state.score) {\r\n            this.setState({highScore: this.state.score})\r\n        }\r\n\r\n    }\r\n\r\n    setScoreZero = () => {\r\n        this.setState({ score: 0 })\r\n    }\r\n    \r\n    openModal() {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n\r\n    setTitle = (title) => {\r\n        this.setState({title: title})\r\n    }\r\n\r\n    setSubTitle = (subTitle) => {\r\n        this.setState({subtitle: subTitle})\r\n    }\r\n\r\n    setMessage = (message) => {\r\n        this.setState({message: message})\r\n    }\r\n\r\n    afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        this.subtitle.style.color = '#f00';\r\n     \r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <NavBar\r\n                    dark={true}\r\n                    name=\"Mind Jar\"\r\n                    score={this.state.score}\r\n                    wins={this.state.wins}\r\n                    loses={this.state.loses}\r\n                    highScore={this.state.highScore}\r\n                />\r\n              \r\n               <Main\r\n                    score={this.state.score}\r\n                    wins={this.state.wins}\r\n                    loses={this.state.loses}\r\n                    highScore={this.state.highScore}\r\n                    incrementScore={this.incrementScore}\r\n                    incrementWins={this.incrementWins}\r\n                    incrementLoses={this.incrementLoses}\r\n                    setScoreZero={this.setScoreZero}\r\n                    shuffleNow={this.state.shuffleNow}\r\n               \r\n\r\n                   \r\n                />\r\n                <ReactModal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    contentLabel={this.state.title}\r\n                    style={{\r\n                        content: {\r\n                            backgroundColor: 'rgb(5,5,5)',\r\n                            top: '50%',\r\n                            left: '50%',\r\n                            right: 'auto',\r\n                            bottom: 'auto',\r\n                            marginRight: '-50%',\r\n                            transform: 'translate(-50%, -50%)',\r\n                            boxShadow: '1px 1px 20px black'\r\n                        }\r\n                    }}\r\n             \r\n                            >\r\n             \r\n                    <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.subtitle}</h2>\r\n       \r\n                    <div>\r\n                        <p>{this.state.message}</p>\r\n                        <button onClick={this.closeModal}>OK</button>\r\n                    </div>\r\n\r\n                </ReactModal>\r\n\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <a class=\"text\" href=\"/\">Mind Jar</a>\r\n                </nav>\r\n                \r\n            </ div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}