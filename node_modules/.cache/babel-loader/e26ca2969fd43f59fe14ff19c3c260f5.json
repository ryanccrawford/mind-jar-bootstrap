{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RyanC\\\\Desktop\\\\code\\\\mind-jar-bootstrap\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; //import Modal from \"./components/Modal\";\n\nimport NavBar from \"./components/NavBar\";\nimport Main from \"./pages/Main\";\nimport ReactModal from 'react-modal';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nReactModal.setAppElement('#root');\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      highScore: 0,\n      wins: 0,\n      loses: 0,\n      modalIsOpen: false,\n      title: \"\",\n      subtitle: \"\",\n      message: \"\",\n      shuffleNow: false\n    };\n\n    this.incrementScore = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n\n      if (this.state.score >= 2) {\n        this.openModal();\n        this.setState({\n          shuffleNow: true\n        });\n      }\n    };\n\n    this.incrementWins = () => {\n      this.setState({\n        wins: this.state.wins + 1\n      });\n    };\n\n    this.incrementLoses = () => {\n      this.setState({\n        loses: this.state.loses + 1\n      });\n    };\n\n    this.setScoreZero = () => {\n      this.setState({\n        score: 0\n      });\n    };\n\n    this.setTitle = title => {\n      this.setState({\n        title: title\n      });\n    };\n\n    this.setSubTitle = subTitle => {\n      this.setState({\n        subtitle: subTitle\n      });\n    };\n\n    this.setMessage = message => {\n      this.setState({\n        message: message\n      });\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      dark: true,\n      name: \"Mind Jar\",\n      score: this.state.score,\n      wins: this.state.wins,\n      loses: this.state.loses,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Main, {\n      score: this.state.score,\n      wins: this.state.wins,\n      loses: this.state.loses,\n      highScore: this.state.highScore,\n      incrementScore: this.incrementScore,\n      incrementWins: this.incrementWins,\n      incrementLoses: this.incrementLoses,\n      setScoreZero: this.setScoreZero,\n      shuffleNow: this.state.shuffleNow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(ReactModal, {\n      isOpen: this.state.modalIsOpen,\n      onAfterOpen: this.afterOpenModal,\n      onRequestClose: this.closeModal,\n      contentLabel: this.state.title,\n      style: {\n        top: '25%',\n        left: '25%',\n        right: '25%',\n        bottom: '25%',\n        transform: 'translate(-50%, -50%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      ref: subtitle => this.subtitle = subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.title), React.createElement(\"button\", {\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"close\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, message => this.message = message, this.message))), React.createElement(\"nav\", {\n      class: \"navbar fixed-bottom navbar-light bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"text\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Mind Jar\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\RyanC\\Desktop\\code\\mind-jar-bootstrap\\src\\App.js"],"names":["React","Component","ReactDOM","NavBar","Main","ReactModal","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","App","constructor","state","score","highScore","wins","loses","modalIsOpen","title","subtitle","message","shuffleNow","incrementScore","setState","openModal","incrementWins","incrementLoses","setScoreZero","setTitle","setSubTitle","subTitle","setMessage","bind","afterOpenModal","closeModal","style","color","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Modal from \"./components/Modal\";\r\nimport NavBar from \"./components/NavBar\"\r\nimport Main from \"./pages/Main\";\r\nimport ReactModal from 'react-modal';\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nReactModal.setAppElement('#root')\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    state = {\r\n        score: 0,\r\n        highScore: 0,\r\n        wins: 0,\r\n        loses: 0,\r\n        modalIsOpen: false,\r\n        title: \"\",\r\n        subtitle: \"\",\r\n        message: \"\",\r\n        shuffleNow: false\r\n    };\r\n\r\n    incrementScore = () => {\r\n        this.setState({ score: this.state.score + 1 })\r\n        if (this.state.score >= 2) {\r\n            this.openModal()\r\n            this.setState({shuffleNow: true})\r\n        }\r\n    }\r\n\r\n    incrementWins = () => {\r\n        this.setState({ wins: this.state.wins + 1 })\r\n    }\r\n\r\n    incrementLoses = () => {\r\n        this.setState({ loses: this.state.loses + 1 })\r\n    }\r\n\r\n    setScoreZero = () => {\r\n        this.setState({ score: 0 })\r\n    }\r\n    \r\n    openModal() {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n\r\n    setTitle = (title) => {\r\n        this.setState({title: title})\r\n    }\r\n\r\n    setSubTitle = (subTitle) => {\r\n        this.setState({subtitle: subTitle})\r\n    }\r\n\r\n    setMessage = (message) => {\r\n        this.setState({message: message})\r\n    }\r\n\r\n    afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        this.subtitle.style.color = '#f00';\r\n     \r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <NavBar\r\n                    dark={true}\r\n                    name=\"Mind Jar\"\r\n                    score={this.state.score}\r\n                    wins={this.state.wins}\r\n                    loses={this.state.loses}\r\n                    highScore={this.state.highScore}\r\n                />\r\n              \r\n               <Main\r\n                    score={this.state.score}\r\n                    wins={this.state.wins}\r\n                    loses={this.state.loses}\r\n                    highScore={this.state.highScore}\r\n                    incrementScore={this.incrementScore}\r\n                    incrementWins={this.incrementWins}\r\n                    incrementLoses={this.incrementLoses}\r\n                    setScoreZero={this.setScoreZero}\r\n                    shuffleNow={this.state.shuffleNow}\r\n               \r\n\r\n                   \r\n                />\r\n                <ReactModal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    contentLabel={this.state.title}\r\n                    style={{\r\n                        top: '25%',\r\n                        left: '25%',\r\n                        right: '25%',\r\n                        bottom: '25%',\r\n                        transform: 'translate(-50%, -50%)'\r\n                    }}\r\n \r\n                >\r\n \r\n                    <h2 ref={subtitle => this.subtitle = subtitle}>{this.title}</h2>\r\n                    <button onClick={this.closeModal}>close</button>\r\n                    <div>\r\n                        <p>{message => this.message = message}{this.message}</p>\r\n                    </div>\r\n\r\n                </ReactModal>\r\n\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <a class=\"text\" href=\"/\">Mind Jar</a>\r\n                </nav>\r\n                \r\n            </ div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}